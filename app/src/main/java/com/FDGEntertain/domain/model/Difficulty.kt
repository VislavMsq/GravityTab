package com.FDGEntertain.domain.model

/**
 * Перечисление, представляющее уровни сложности в игре.
 * 
 * Каждый уровень сложности определяет параметры игрового процесса,
 * такие как ускорение падения шариков, интервал появления новых шариков
 * и количество жизней игрока.
 * 
 * @property accel Ускорение падения шариков в пикселях в секунду в квадрате.
 * @property spawnMs Интервал в миллисекундах между появлением новых шариков.
 * @property lives Количество жизней, доступных игроку на данном уровне сложности.
 */
enum class Difficulty(
    val accel: Float,
    val spawnMs: Long,
    val lives: Int,
) {
    /**
     * Легкий уровень сложности.
     * - Медленное падение шариков (900 px/s²)
     - Долгий интервал между появлениями (900 мс)
     - 5 жизней
     */
    EASY(accel = 900f, spawnMs = 900L, lives = 5),

    /**
     * Нормальный уровень сложности.
     * - Средняя скорость падения шариков (1200 px/s²)
     - Средний интервал между появлениями (700 мс)
     - 3 жизни
     */
    NORMAL(accel = 1200f, spawnMs = 700L, lives = 3),

    /**
     * Сложный уровень сложности.
     * - Быстрое падение шариков (1500 px/s²)
     - Короткий интервал между появлениями (550 мс)
     - 2 жизни
     */
    HARD(accel = 1500f, spawnMs = 550L, lives = 2);

    companion object {
        /**
         * Возвращает объект Difficulty по его имени.
         * 
         * @param name Имя уровня сложности (без учета регистра).
         * @return Соответствующий объект Difficulty или null, если не найден.
         */
        fun fromName(name: String): Difficulty? {
            return values().find { it.name.equals(name, ignoreCase = true) }
        }
    }
}
